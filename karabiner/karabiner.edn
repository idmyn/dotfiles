; much inspiration taken from https://github.com/nikitavoloboev/dotfiles/blob/master/karabiner/karabiner.edn
{:profiles
 {:Default {:default true
            :sim     50
            :delay   80
            :alone   1000
            :held    500}}

 :templates {:alfred "osascript -e 'tell application \"Alfred 4\" to run trigger \"%s\" in workflow \"%s\" with argument \"%s\"'"
             :km "osascript -e 'tell application \"Keyboard Maestro Engine\" to do script \"%s\"'"
             :hs "open -g hammerspoon://%s"}

 :devices      {:logitech [{:vendor_id 1133 :product_id 45890}]}

 :input-sources {:british {:input_mode_id   ""
                           :input_source_id "com.apple.keylayout.British"
                           :language        "en"}}

 :applications {:Editors  ["^org\\.gnu\\.Emacs$"
                           "^com\\.google\\.Chrome$"]
                :Vim      ["^org\\.gnu\\.Emacs$"
                           "^org\\.vim\\.MacVim$"
                           "^com\\.googlecode\\.iterm2$"
                           "^com\\.apple\\.Terminal$"]
                :uk       ["^com\\.apple\\.Mail$"
                           "^org\\.gnu\\.Emacs$"
                           "^org\\.vim\\.MacVim$"
                           "^com\\.apple\\.Terminal$"
                           "^ru.keepcoder.Telegram$"]}

 ;; :simlayers {:f-mode {:key :f}
 ;;             :j-mode {:key :j}
 ;;             :a-mode {:key :a}
 ;;             :w-mode {:key :w}
 ;;             :m-mode {:key :m}
 ;;             :t-mode {:key :t}}

 :main [{:des   "everywhere: right cmd alone to f13 (alfred), and to ctrl as modifier"
         :rules [[:right_command :left_control nil {:alone :f13}]]}

        {:des   "everywhere: tab to opt/meta as modifier"
         :rules [[:#Ttab :left_alt nil {:alone :tab}]]}

        {:des   "in vim (and emulators): caps_lock to esc when pressed alone, to ctrl as modifier"
         :rules [[:condi :Vim] [:##caps_lock :left_control nil {:alone :escape}]]}

        {:des   "outside vim (and emulators): caps_lock to f13 when pressed alone, to ctrl as modifier"
         :rules [[:condi :!Vim] [:##caps_lock :left_control nil {:alone :f13}]]}

        {:des "left-cmd + shift for window management"
         :rules [[:!CSf :!!f] ;; fullscreen
                 [:!CSo :!!o] ;; maximise window on other monitor
                 [:!CSj :!!j] ;; split left
                 [:!CSk :!!k] ;; split down
                 [:!CSl :!!l] ;; split up
                 [:!CSsemicolon :!!semicolon] ;; split right
                 [:!CSe [:km "open: Emacs"]]
                 [:!CSw [:km "open: Brave"]]
                 [:!CSh [:hs "someAlert"]]
                 ]}

        {:des "tkey (todoist)"
         :rules [:t-mode
                 [:o :!!1] ; open todoist
                 [:a :!!2] ; new todoist task
                 [:n :!!2]]} ; new todoist task

        {:des "wkey (window management via BTT)"
         :rules [:w-mode
                 [:j :!!j] ; split left
                 [:k :!!k] ; split down
                 [:l :!!l] ; split up
                 [:semicolon :!!semicolon] ; split right
                 [:d [:km "wm: Hide all"]]
                 [:o :!!o] ; maximise window on other monitor
                 [:f :!!f]]} ; fullscreen

        {:des "akey (alfred)"
         :rules [:a-mode
                 [:s :f13]]} ; search alfred

        {:des "jkey (open apps)"
         :rules [:j-mode
                 [:e [:km "open: Emacs"]]
                 [:w [:km "open: Brave"]]
                 [:s [:km "open: Terminal"]]
                 [:c [:km "open: Calendar"]]
                 [:k [:km "open: KM"]]
                 [:t [:km "open: Tidal"]]]}

        {:des "mkey (open messaging apps)"
         :rules [:m-mode
                 [:s [:km "open: Slack"]]
                 [:e [:km "open: Mail"]]
                 [:t [:km "open: Telegram"]]]}

        {:des "fkey (open apps)"
         :rules [:f-mode
                 [:e [:km "open: Emacs"]]
                 [:w [:km "open: Brave"]]
                 [:s [:km "open: Terminal"]]
                 [:k [:km "open: KM"]]
                 [:n :!!n]]} ; open nvALT

        {:des "workman dead state"
         :rules [[:comma ["dead-state" 1] :!dead-state]
                 [:4 [:!Sgrave_accent_and_tilde ["dead-state" 0]] :dead-state] ;; ~
                 [:5 [:grave_accent_and_tilde ["dead-state" 0]] :dead-state] ;; `
                 [:7 [:!O3 ["dead-state" 0]] :dead-state] ;; #
                 [:8 [:!S6 ["dead-state" 0]] :dead-state] ;; ^
                 [:q [:!S5 ["dead-state" 0]] :dead-state] ;; %
                 [:w [:!S7 ["dead-state" 0]] :dead-state] ;; &
                 [:e [:!Sslash ["dead-state" 0]] :dead-state] ;; ?
                 [:r [:!Sequal_sign ["dead-state" 0]] :dead-state] ;; +
                 [:t [:!S2 ["dead-state" 0]] :dead-state] ;; @
                 [:y [:!S4 ["dead-state" 0]] :dead-state] ;; $
                 [:u [:!Shyphen ["dead-state" 0]] :dead-state] ;; _
                 [:i [:open_bracket ["dead-state" 0]] :dead-state] ;; [
                 [:o [:close_bracket ["dead-state" 0]] :dead-state] ;; ]
                 [:p [:!S1 ["dead-state" 0]] :dead-state] ;; !
                 [:a [:!S4 ["dead-state" 0]] :dead-state] ;; $ (used to be "/")
                 [:s [:!S9 ["dead-state" 0]] :dead-state] ;; (
                 [:d [:equal_sign ["dead-state" 0]] :dead-state] ;; =
                 [:f [:!O3 ["dead-state" 0]] :dead-state] ;; # (used to be "0")
                 [:g [:!Sopen_bracket ["dead-state" 0]] :dead-state] ;; {
                 [:h [:!Sclose_bracket ["dead-state" 0]] :dead-state] ;; }
                 [:j [:!Shyphen ["dead-state" 0]] :dead-state] ;; _ (used to be '1')
                 [:k [:!S8 ["dead-state" 0]] :dead-state] ;; *
                 [:l [:!S0 ["dead-state" 0]] :dead-state] ;; )
                 [:semicolon [:hyphen ["dead-state" 0]] :dead-state] ;; -
                 [:z [:6 ["dead-state" 0]] :dead-state] ;; 6
                 [:x [:7 ["dead-state" 0]] :dead-state] ;; 7
                 [:c [:8 ["dead-state" 0]] :dead-state] ;; 8
                 [:v [:slash ["dead-state" 0]] :dead-state] ;; / (used to be "9")
                 [:b [:!Sbackslash ["dead-state" 0]] :dead-state] ;; |
                 [:n [:backslash ["dead-state" 0]] :dead-state] ;; \
                 [:m [:2 ["dead-state" 0]] :dead-state] ;; 2
                 [:comma [:comma ["dead-state" 0]] :dead-state] ;; ,
                 [:period [:4 ["dead-state" 0]] :dead-state] ;; 4
                 [:slash [:5 ["dead-state" 0]] :dead-state] ;; 5
                 [:return_or_enter [:comma :return_or_enter ["dead-state" 0]] :dead-state] ;; ,\n
                 [:escape ["dead-state" 0] :dead-state] ;; exit dead-state
                 [:delete_or_backspace ["dead-state" 0] :dead-state] ;; exit dead-state
                 [:spacebar [:comma :spacebar ["dead-state" 0]] :dead-state]]}

        {:des "swap : and ;"
         :rules [[:#Psemicolon :!Ssemicolon]
                 [:!Ssemicolon :semicolon]
                 [:!Rsemicolon :semicolon]]}

        ]}
